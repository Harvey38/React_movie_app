{"ast":null,"code":"var _jsxFileName = \"D:\\\\29th September-20191003T104533Z-001\\\\29th September\\\\myapp\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Likes from \"./Likes\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"../utilites/paginate\";\nimport ListGroup from \"./listGroup\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      selectedGenre: \"All Genres\",\n      pageSize: 4,\n      genres: [],\n      currentPage: 1\n    };\n\n    this.handleClick = id => {\n      const clonedArray = [...this.state.movies];\n      const index = clonedArray.indexOf(id);\n      console.log(index);\n      clonedArray[index][\"liked\"] = !clonedArray[index][\"liked\"];\n      this.setState({\n        movies: clonedArray\n      });\n    };\n\n    this.handleDelete = clickedMovie => {\n      const farr = this.state.movies.filter(elem => {\n        return clickedMovie !== elem;\n      }); // console.log(farr);\n\n      this.setState({\n        movies: farr\n      });\n    };\n\n    this.handlePageChange = page => {\n      // console.log(page);\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      // console.log(genre);\n      // to reset  selected page we will change state of current page\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    {\n      console.log(this.state.selectedGenre);\n    }\n    const filtered = this.state.selectedGenre && this.state.selectedGenre._id ? this.state.movies.filter(movie => movie.genre._id === this.state.selectedGenre._id) : this.state.movies;\n    console.log(filtered);\n    const movies = paginate(filtered, this.state.currentPage, this.state.pageSize);\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      items: this.state.genres,\n      textProperty: \"name\",\n      valueProperty: \"_id\",\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Stock\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Rating\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, console.log(movies), movies.map(movie => {\n      return React.createElement(\"tr\", {\n        key: movie[\"_id\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, movie[\"title\"]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, movie[\"genre\"][\"name\"]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, movie[\"numberInStock\"]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, movie[\"dailyRentalRate\"]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Likes, {\n        onClick: () => {\n          this.handleClick(movie);\n        },\n        likes: movie[\"liked\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          this.handleDelete(movie);\n        },\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Delete\")));\n    }))), React.createElement(Pagination, {\n      itemsCount: filtered.length,\n      pageSize: this.state.pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: this.state.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n} // for type checking => install prop-types\n\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\nexport default Movies;","map":{"version":3,"sources":["D:\\29th September-20191003T104533Z-001\\29th September\\myapp\\src\\components\\movies.jsx"],"names":["React","Component","PropTypes","getMovies","getGenres","Likes","Pagination","paginate","ListGroup","Movies","state","movies","selectedGenre","pageSize","genres","currentPage","handleClick","id","clonedArray","index","indexOf","console","log","setState","handleDelete","clickedMovie","farr","filter","elem","handlePageChange","page","handleGenreSelect","genre","componentDidMount","name","render","filtered","_id","movie","map","length","propTypes","itemsCount","number","isRequired","onPageChange","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Likes from \"./Likes\";\r\nimport Pagination from \"./pagination\";\r\nimport { paginate } from \"../utilites/paginate\";\r\nimport ListGroup from \"./listGroup\";\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    selectedGenre: \"All Genres\",\r\n    pageSize: 4,\r\n    genres: [],\r\n    currentPage: 1\r\n  };\r\n  componentDidMount() {\r\n    const genres = [{ name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres });\r\n  }\r\n  handleClick = id => {\r\n    const clonedArray = [...this.state.movies];\r\n    const index = clonedArray.indexOf(id);\r\n    console.log(index);\r\n    clonedArray[index][\"liked\"] = !clonedArray[index][\"liked\"];\r\n    this.setState({ movies: clonedArray });\r\n  };\r\n  handleDelete = clickedMovie => {\r\n    const farr = this.state.movies.filter(elem => {\r\n      return clickedMovie !== elem;\r\n    });\r\n    // console.log(farr);\r\n    this.setState({ movies: farr });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    // console.log(page);\r\n    this.setState({ currentPage: page });\r\n  };\r\n  \r\n  handleGenreSelect = genre => {\r\n    // console.log(genre);\r\n    // to reset  selected page we will change state of current page\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n  render() {\r\n    {\r\n      console.log(this.state.selectedGenre);\r\n    }\r\n    const filtered =\r\n      this.state.selectedGenre && this.state.selectedGenre._id\r\n        ? this.state.movies.filter(\r\n            movie => movie.genre._id === this.state.selectedGenre._id\r\n          )\r\n        : this.state.movies;\r\n    console.log(filtered);\r\n    const movies = paginate(\r\n      filtered,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            textProperty=\"name\"\r\n            valueProperty=\"_id\"\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          ></ListGroup>\r\n        </div>\r\n        <div className=\"col\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Genre</th>\r\n                <th scope=\"col\">Stock</th>\r\n                <th scope=\"col\">Rating</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {console.log(movies)}\r\n              {movies.map(movie => {\r\n                return (\r\n                  <tr key={movie[\"_id\"]}>\r\n                    <td>{movie[\"title\"]}</td>\r\n                    <td>{movie[\"genre\"][\"name\"]}</td>\r\n                    <td>{movie[\"numberInStock\"]}</td>\r\n                    <td>{movie[\"dailyRentalRate\"]}</td>\r\n                    <td>\r\n                      <Likes\r\n                        onClick={() => {\r\n                          this.handleClick(movie);\r\n                        }}\r\n                        likes={movie[\"liked\"]}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          this.handleDelete(movie);\r\n                        }}\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsCount={filtered.length}\r\n            pageSize={this.state.pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={this.state.currentPage}\r\n          ></Pagination>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// for type checking => install prop-types\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}